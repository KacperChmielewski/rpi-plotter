
// This file has been generated by the GUI designer. Do not modify.
namespace RPiPlotter.Windows
{
    public partial class MainWindow
    {
        private global::Gtk.UIManager UIManager;
		
        private global::Gtk.Action FileAction;
		
        private global::Gtk.Action ViewAction;
		
        private global::Gtk.Action HelpAction;
		
        private global::Gtk.Action connectAction;
		
        private global::Gtk.Action disconnectAction;
		
        private global::Gtk.Action quitAction;
		
        private global::Gtk.RadioAction CommandModeAction;
		
        private global::Gtk.RadioAction ControlModeAction;
		
        private global::Gtk.RadioAction FileModeAction;
		
        private global::Gtk.Action aboutAction;
		
        private global::Gtk.Action CommandReferenceAction;
		
        private global::Gtk.ToggleAction PreviewAction;
		
        private global::Gtk.Action PlotterAction;
		
        private global::Gtk.Action ServerInfoAction;
		
        private global::Gtk.Action ServerLogAction;
		
        private global::Gtk.Action CalibrateAction;
		
        private global::Gtk.ToggleAction PauseExecutionAction;
		
        private global::Gtk.Action GetStateInfoAction;
		
        private global::Gtk.Action GetStringsLengthAction;
		
        private global::Gtk.Action StopPANICAction;
		
        private global::Gtk.VBox mainvbox;
		
        private global::Gtk.MenuBar menubar;
		
        private global::Gtk.Alignment contentAlignment;
		
        private global::Gtk.Notebook notebook;
		
        private global::Gtk.VBox commandvbox;
		
        private global::Gtk.ScrolledWindow GtkScrolledWindow;
		
        private global::Gtk.TreeView commandTreeView;
		
        private global::Gtk.HBox commandentryhbox;
		
        private global::Gtk.Label label1;
		
        private global::Gtk.Entry commandEntry;
		
        private global::Gtk.Button sendcommandButton;
		
        private global::Gtk.Button panicButton;
		
        private global::Gtk.Label label2;
		
        private global::Gtk.VBox filevbox;
		
        private global::Gtk.Frame fileProgressFrame;
		
        private global::Gtk.Alignment GtkAlignment;
		
        private global::Gtk.HBox hbox2;
		
        private global::Gtk.ProgressBar fileProgressBar;
		
        private global::Gtk.Button cancelFileButton;
		
        private global::Gtk.Label fileProgressFrameLabel;
		
        private global::Gtk.HBox filechooserhbox;
		
        private global::Gtk.Label label4;
		
        private global::Gtk.FileChooserButton fileChooserButton;
		
        private global::Gtk.Button fileSendButton;
		
        private global::Gtk.Label label3;
		
        private global::Gtk.Statusbar statusbar2;
		
        private global::Gtk.Alignment connectStatusAlignment;
		
        private global::Gtk.HBox connectStatusHbox;
		
        private global::Gtk.Image connectStatusImage;
		
        private global::Gtk.Label connectStatusLabel;
		
        private global::Gtk.Label stringsLengthLabel;
		
        private global::Gtk.Label coordLabel;

        protected virtual void Build()
        {
            global::Stetic.Gui.Initialize(this);
            // Widget RPiPlotter.Windows.MainWindow
            this.UIManager = new global::Gtk.UIManager();
            global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
            this.FileAction = new global::Gtk.Action("FileAction", global::Mono.Unix.Catalog.GetString("File"), null, null);
            this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Plotter");
            w1.Add(this.FileAction, null);
            this.ViewAction = new global::Gtk.Action("ViewAction", global::Mono.Unix.Catalog.GetString("View"), null, null);
            this.ViewAction.ShortLabel = global::Mono.Unix.Catalog.GetString("View");
            w1.Add(this.ViewAction, null);
            this.HelpAction = new global::Gtk.Action("HelpAction", global::Mono.Unix.Catalog.GetString("Help"), null, null);
            this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Help");
            w1.Add(this.HelpAction, null);
            this.connectAction = new global::Gtk.Action("connectAction", global::Mono.Unix.Catalog.GetString("Connect..."), null, "gtk-connect");
            this.connectAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Connect...");
            w1.Add(this.connectAction, null);
            this.disconnectAction = new global::Gtk.Action("disconnectAction", global::Mono.Unix.Catalog.GetString("Disconnect"), null, "gtk-disconnect");
            this.disconnectAction.Sensitive = false;
            this.disconnectAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Disconnect");
            w1.Add(this.disconnectAction, null);
            this.quitAction = new global::Gtk.Action("quitAction", global::Mono.Unix.Catalog.GetString("Quit"), null, "gtk-quit");
            this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Quit");
            w1.Add(this.quitAction, "<Primary><Mod2>q");
            this.CommandModeAction = new global::Gtk.RadioAction("CommandModeAction", global::Mono.Unix.Catalog.GetString("Command mode"), null, null, 0);
            this.CommandModeAction.Group = new global::GLib.SList(global::System.IntPtr.Zero);
            this.CommandModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Command mode");
            w1.Add(this.CommandModeAction, null);
            this.ControlModeAction = new global::Gtk.RadioAction("ControlModeAction", global::Mono.Unix.Catalog.GetString("Control mode"), null, null, 0);
            this.ControlModeAction.Group = this.CommandModeAction.Group;
            this.ControlModeAction.Sensitive = false;
            this.ControlModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Control mode");
            w1.Add(this.ControlModeAction, null);
            this.FileModeAction = new global::Gtk.RadioAction("FileModeAction", global::Mono.Unix.Catalog.GetString("File mode"), null, null, 0);
            this.FileModeAction.Group = this.CommandModeAction.Group;
            this.FileModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString("File mode");
            this.FileModeAction.Visible = false;
            w1.Add(this.FileModeAction, null);
            this.aboutAction = new global::Gtk.Action("aboutAction", global::Mono.Unix.Catalog.GetString("About"), null, "gtk-about");
            this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString("About");
            w1.Add(this.aboutAction, null);
            this.CommandReferenceAction = new global::Gtk.Action("CommandReferenceAction", global::Mono.Unix.Catalog.GetString("Command reference"), null, null);
            this.CommandReferenceAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Command reference");
            w1.Add(this.CommandReferenceAction, null);
            this.PreviewAction = new global::Gtk.ToggleAction("PreviewAction", global::Mono.Unix.Catalog.GetString("Preview"), null, null);
            this.PreviewAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Preview");
            w1.Add(this.PreviewAction, null);
            this.PlotterAction = new global::Gtk.Action("PlotterAction", global::Mono.Unix.Catalog.GetString("Plotter"), null, null);
            this.PlotterAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Plotter");
            w1.Add(this.PlotterAction, null);
            this.ServerInfoAction = new global::Gtk.Action("ServerInfoAction", global::Mono.Unix.Catalog.GetString("Server information"), null, "gtk-dialog-info");
            this.ServerInfoAction.Sensitive = false;
            this.ServerInfoAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Server info");
            w1.Add(this.ServerInfoAction, null);
            this.ServerLogAction = new global::Gtk.Action("ServerLogAction", global::Mono.Unix.Catalog.GetString("Server log"), null, null);
            this.ServerLogAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Server log");
            w1.Add(this.ServerLogAction, null);
            this.CalibrateAction = new global::Gtk.Action("CalibrateAction", global::Mono.Unix.Catalog.GetString("Calibrate"), null, null);
            this.CalibrateAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Calibrate");
            w1.Add(this.CalibrateAction, null);
            this.PauseExecutionAction = new global::Gtk.ToggleAction("PauseExecutionAction", global::Mono.Unix.Catalog.GetString("Pause execution"), null, null);
            this.PauseExecutionAction.Sensitive = false;
            this.PauseExecutionAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Pause execution");
            w1.Add(this.PauseExecutionAction, null);
            this.GetStateInfoAction = new global::Gtk.Action("GetStateInfoAction", global::Mono.Unix.Catalog.GetString("Get state info"), null, null);
            this.GetStateInfoAction.Sensitive = false;
            this.GetStateInfoAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Get coordinates");
            w1.Add(this.GetStateInfoAction, null);
            this.GetStringsLengthAction = new global::Gtk.Action("GetStringsLengthAction", global::Mono.Unix.Catalog.GetString("Get strings length"), null, null);
            this.GetStringsLengthAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Get strings length");
            w1.Add(this.GetStringsLengthAction, null);
            this.StopPANICAction = new global::Gtk.Action("StopPANICAction", global::Mono.Unix.Catalog.GetString("Stop/PANIC"), null, null);
            this.StopPANICAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Stop/PANIC");
            w1.Add(this.StopPANICAction, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.Name = "RPiPlotter.Windows.MainWindow";
            this.Title = global::Mono.Unix.Catalog.GetString("vPlotter Controller");
            this.WindowPosition = ((global::Gtk.WindowPosition)(4));
            // Container child RPiPlotter.Windows.MainWindow.Gtk.Container+ContainerChild
            this.mainvbox = new global::Gtk.VBox();
            this.mainvbox.Name = "mainvbox";
            // Container child mainvbox.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><menubar name='menubar'><menu name='FileAction' action='FileAction'><menuitem name='connectAction' action='connectAction'/><menuitem name='disconnectAction' action='disconnectAction'/><separator/><menuitem name='ServerInfoAction' action='ServerInfoAction'/><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='PlotterAction' action='PlotterAction'><menuitem name='PauseExecutionAction' action='PauseExecutionAction'/><menuitem name='StopPANICAction' action='StopPANICAction'/></menu><menu name='ViewAction' action='ViewAction'><menuitem name='CommandModeAction' action='CommandModeAction'/><menuitem name='FileModeAction' action='FileModeAction'/><separator/><menuitem name='PreviewAction' action='PreviewAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='CommandReferenceAction' action='CommandReferenceAction'/><separator/><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
            this.menubar = ((global::Gtk.MenuBar)(this.UIManager.GetWidget("/menubar")));
            this.menubar.Name = "menubar";
            this.mainvbox.Add(this.menubar);
            global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.mainvbox[this.menubar]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child mainvbox.Gtk.Box+BoxChild
            this.contentAlignment = new global::Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.contentAlignment.Name = "contentAlignment";
            this.contentAlignment.LeftPadding = ((uint)(6));
            this.contentAlignment.TopPadding = ((uint)(6));
            this.contentAlignment.RightPadding = ((uint)(6));
            this.contentAlignment.BottomPadding = ((uint)(6));
            // Container child contentAlignment.Gtk.Container+ContainerChild
            this.notebook = new global::Gtk.Notebook();
            this.notebook.CanFocus = true;
            this.notebook.Name = "notebook";
            this.notebook.CurrentPage = 0;
            this.notebook.ShowBorder = false;
            this.notebook.ShowTabs = false;
            // Container child notebook.Gtk.Notebook+NotebookChild
            this.commandvbox = new global::Gtk.VBox();
            this.commandvbox.Sensitive = false;
            this.commandvbox.Name = "commandvbox";
            this.commandvbox.Spacing = 6;
            // Container child commandvbox.Gtk.Box+BoxChild
            this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
            this.GtkScrolledWindow.Name = "GtkScrolledWindow";
            this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
            // Container child GtkScrolledWindow.Gtk.Container+ContainerChild
            this.commandTreeView = new global::Gtk.TreeView();
            this.commandTreeView.CanFocus = true;
            this.commandTreeView.Name = "commandTreeView";
            this.commandTreeView.EnableSearch = false;
            this.GtkScrolledWindow.Add(this.commandTreeView);
            this.commandvbox.Add(this.GtkScrolledWindow);
            global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.commandvbox[this.GtkScrolledWindow]));
            w4.Position = 0;
            // Container child commandvbox.Gtk.Box+BoxChild
            this.commandentryhbox = new global::Gtk.HBox();
            this.commandentryhbox.Name = "commandentryhbox";
            this.commandentryhbox.Spacing = 6;
            // Container child commandentryhbox.Gtk.Box+BoxChild
            this.label1 = new global::Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = global::Mono.Unix.Catalog.GetString("Command:");
            this.commandentryhbox.Add(this.label1);
            global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.commandentryhbox[this.label1]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child commandentryhbox.Gtk.Box+BoxChild
            this.commandEntry = new global::Gtk.Entry();
            this.commandEntry.CanFocus = true;
            this.commandEntry.Name = "commandEntry";
            this.commandEntry.IsEditable = true;
            this.commandEntry.MaxLength = 100;
            this.commandEntry.InvisibleChar = '●';
            this.commandentryhbox.Add(this.commandEntry);
            global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.commandentryhbox[this.commandEntry]));
            w6.Position = 1;
            // Container child commandentryhbox.Gtk.Box+BoxChild
            this.sendcommandButton = new global::Gtk.Button();
            this.sendcommandButton.Sensitive = false;
            this.sendcommandButton.CanDefault = true;
            this.sendcommandButton.CanFocus = true;
            this.sendcommandButton.Name = "sendcommandButton";
            this.sendcommandButton.UseUnderline = true;
            this.sendcommandButton.Label = global::Mono.Unix.Catalog.GetString("Send");
            this.commandentryhbox.Add(this.sendcommandButton);
            global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.commandentryhbox[this.sendcommandButton]));
            w7.Position = 2;
            w7.Expand = false;
            w7.Fill = false;
            // Container child commandentryhbox.Gtk.Box+BoxChild
            this.panicButton = new global::Gtk.Button();
            this.panicButton.CanFocus = true;
            this.panicButton.Name = "panicButton";
            this.panicButton.UseUnderline = true;
            this.panicButton.Label = global::Mono.Unix.Catalog.GetString("PANIC");
            this.commandentryhbox.Add(this.panicButton);
            global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.commandentryhbox[this.panicButton]));
            w8.Position = 3;
            w8.Expand = false;
            w8.Fill = false;
            this.commandvbox.Add(this.commandentryhbox);
            global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.commandvbox[this.commandentryhbox]));
            w9.Position = 1;
            w9.Expand = false;
            w9.Fill = false;
            this.notebook.Add(this.commandvbox);
            // Notebook tab
            this.label2 = new global::Gtk.Label();
            this.label2.Name = "label2";
            this.label2.LabelProp = global::Mono.Unix.Catalog.GetString("page1");
            this.notebook.SetTabLabel(this.commandvbox, this.label2);
            this.label2.ShowAll();
            // Container child notebook.Gtk.Notebook+NotebookChild
            this.filevbox = new global::Gtk.VBox();
            this.filevbox.Sensitive = false;
            this.filevbox.Name = "filevbox";
            this.filevbox.Spacing = 6;
            // Container child filevbox.Gtk.Box+BoxChild
            this.fileProgressFrame = new global::Gtk.Frame();
            this.fileProgressFrame.Name = "fileProgressFrame";
            this.fileProgressFrame.ShadowType = ((global::Gtk.ShadowType)(0));
            // Container child fileProgressFrame.Gtk.Container+ContainerChild
            this.GtkAlignment = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment.Name = "GtkAlignment";
            this.GtkAlignment.LeftPadding = ((uint)(5));
            this.GtkAlignment.TopPadding = ((uint)(5));
            this.GtkAlignment.BottomPadding = ((uint)(5));
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            this.hbox2 = new global::Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.fileProgressBar = new global::Gtk.ProgressBar();
            this.fileProgressBar.Name = "fileProgressBar";
            this.fileProgressBar.Ellipsize = ((global::Pango.EllipsizeMode)(2));
            this.hbox2.Add(this.fileProgressBar);
            global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.fileProgressBar]));
            w11.Position = 0;
            // Container child hbox2.Gtk.Box+BoxChild
            this.cancelFileButton = new global::Gtk.Button();
            this.cancelFileButton.CanFocus = true;
            this.cancelFileButton.Name = "cancelFileButton";
            this.cancelFileButton.UseUnderline = true;
            this.cancelFileButton.Label = global::Mono.Unix.Catalog.GetString("Cancel");
            this.hbox2.Add(this.cancelFileButton);
            global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.cancelFileButton]));
            w12.Position = 1;
            w12.Expand = false;
            w12.Fill = false;
            this.GtkAlignment.Add(this.hbox2);
            this.fileProgressFrame.Add(this.GtkAlignment);
            this.fileProgressFrameLabel = new global::Gtk.Label();
            this.fileProgressFrameLabel.Name = "fileProgressFrameLabel";
            this.fileProgressFrameLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Execution status</b>");
            this.fileProgressFrameLabel.UseMarkup = true;
            this.fileProgressFrame.LabelWidget = this.fileProgressFrameLabel;
            this.filevbox.Add(this.fileProgressFrame);
            global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.filevbox[this.fileProgressFrame]));
            w15.Position = 0;
            w15.Expand = false;
            w15.Fill = false;
            // Container child filevbox.Gtk.Box+BoxChild
            this.filechooserhbox = new global::Gtk.HBox();
            this.filechooserhbox.Name = "filechooserhbox";
            this.filechooserhbox.Spacing = 6;
            // Container child filechooserhbox.Gtk.Box+BoxChild
            this.label4 = new global::Gtk.Label();
            this.label4.Name = "label4";
            this.label4.LabelProp = global::Mono.Unix.Catalog.GetString("File:");
            this.filechooserhbox.Add(this.label4);
            global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.filechooserhbox[this.label4]));
            w16.Position = 0;
            w16.Expand = false;
            w16.Fill = false;
            // Container child filechooserhbox.Gtk.Box+BoxChild
            this.fileChooserButton = new global::Gtk.FileChooserButton(global::Mono.Unix.Catalog.GetString("Choose *.plo file"), ((global::Gtk.FileChooserAction)(0)));
            this.fileChooserButton.Name = "fileChooserButton";
            this.filechooserhbox.Add(this.fileChooserButton);
            global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.filechooserhbox[this.fileChooserButton]));
            w17.Position = 1;
            // Container child filechooserhbox.Gtk.Box+BoxChild
            this.fileSendButton = new global::Gtk.Button();
            this.fileSendButton.Sensitive = false;
            this.fileSendButton.CanFocus = true;
            this.fileSendButton.Name = "fileSendButton";
            this.fileSendButton.UseUnderline = true;
            this.fileSendButton.Label = global::Mono.Unix.Catalog.GetString("Send");
            this.filechooserhbox.Add(this.fileSendButton);
            global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.filechooserhbox[this.fileSendButton]));
            w18.Position = 2;
            w18.Expand = false;
            w18.Fill = false;
            this.filevbox.Add(this.filechooserhbox);
            global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.filevbox[this.filechooserhbox]));
            w19.PackType = ((global::Gtk.PackType)(1));
            w19.Position = 2;
            w19.Expand = false;
            w19.Fill = false;
            this.notebook.Add(this.filevbox);
            global::Gtk.Notebook.NotebookChild w20 = ((global::Gtk.Notebook.NotebookChild)(this.notebook[this.filevbox]));
            w20.Position = 1;
            // Notebook tab
            this.label3 = new global::Gtk.Label();
            this.label3.Name = "label3";
            this.label3.LabelProp = global::Mono.Unix.Catalog.GetString("page2");
            this.notebook.SetTabLabel(this.filevbox, this.label3);
            this.label3.ShowAll();
            this.contentAlignment.Add(this.notebook);
            this.mainvbox.Add(this.contentAlignment);
            global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.mainvbox[this.contentAlignment]));
            w22.Position = 1;
            // Container child mainvbox.Gtk.Box+BoxChild
            this.statusbar2 = new global::Gtk.Statusbar();
            this.statusbar2.Name = "statusbar2";
            this.statusbar2.Spacing = 12;
            // Container child statusbar2.Gtk.Box+BoxChild
            this.connectStatusAlignment = new global::Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.connectStatusAlignment.Name = "connectStatusAlignment";
            this.connectStatusAlignment.LeftPadding = ((uint)(5));
            this.connectStatusAlignment.TopPadding = ((uint)(2));
            this.connectStatusAlignment.BottomPadding = ((uint)(2));
            // Container child connectStatusAlignment.Gtk.Container+ContainerChild
            this.connectStatusHbox = new global::Gtk.HBox();
            this.connectStatusHbox.Name = "connectStatusHbox";
            this.connectStatusHbox.Spacing = 6;
            // Container child connectStatusHbox.Gtk.Box+BoxChild
            this.connectStatusImage = new global::Gtk.Image();
            this.connectStatusImage.Name = "connectStatusImage";
            this.connectStatusImage.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-disconnect", global::Gtk.IconSize.SmallToolbar);
            this.connectStatusHbox.Add(this.connectStatusImage);
            global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.connectStatusHbox[this.connectStatusImage]));
            w23.Position = 0;
            w23.Expand = false;
            w23.Fill = false;
            // Container child connectStatusHbox.Gtk.Box+BoxChild
            this.connectStatusLabel = new global::Gtk.Label();
            this.connectStatusLabel.Name = "connectStatusLabel";
            this.connectStatusLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Disconnected");
            this.connectStatusHbox.Add(this.connectStatusLabel);
            global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.connectStatusHbox[this.connectStatusLabel]));
            w24.Position = 1;
            w24.Expand = false;
            w24.Fill = false;
            this.connectStatusAlignment.Add(this.connectStatusHbox);
            this.statusbar2.Add(this.connectStatusAlignment);
            global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.statusbar2[this.connectStatusAlignment]));
            w26.Position = 0;
            w26.Expand = false;
            w26.Fill = false;
            // Container child statusbar2.Gtk.Box+BoxChild
            this.stringsLengthLabel = new global::Gtk.Label();
            this.stringsLengthLabel.Name = "stringsLengthLabel";
            this.stringsLengthLabel.LabelProp = global::Mono.Unix.Catalog.GetString("strings length");
            this.stringsLengthLabel.UseMarkup = true;
            this.statusbar2.Add(this.stringsLengthLabel);
            global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.statusbar2[this.stringsLengthLabel]));
            w27.PackType = ((global::Gtk.PackType)(1));
            w27.Position = 2;
            w27.Expand = false;
            w27.Fill = false;
            // Container child statusbar2.Gtk.Box+BoxChild
            this.coordLabel = new global::Gtk.Label();
            this.coordLabel.Name = "coordLabel";
            this.coordLabel.LabelProp = global::Mono.Unix.Catalog.GetString("coordinates");
            this.coordLabel.UseMarkup = true;
            this.statusbar2.Add(this.coordLabel);
            global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.statusbar2[this.coordLabel]));
            w28.PackType = ((global::Gtk.PackType)(1));
            w28.Position = 3;
            w28.Expand = false;
            w28.Fill = false;
            this.mainvbox.Add(this.statusbar2);
            global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.mainvbox[this.statusbar2]));
            w29.Position = 2;
            w29.Expand = false;
            w29.Fill = false;
            this.Add(this.mainvbox);
            if ((this.Child != null))
            {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 488;
            this.DefaultHeight = 299;
            this.sendcommandButton.HasDefault = true;
            this.fileProgressFrame.Hide();
            this.stringsLengthLabel.Hide();
            this.coordLabel.Hide();
            this.Show();
            this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnQuit);
            this.connectAction.Activated += new global::System.EventHandler(this.OnConnectActionActivated);
            this.disconnectAction.Activated += new global::System.EventHandler(this.OnDisconnectActionActivated);
            this.quitAction.Activated += new global::System.EventHandler(this.OnQuit);
            this.CommandModeAction.Toggled += new global::System.EventHandler(this.OnCommandModeActionToggled);
            this.FileModeAction.Toggled += new global::System.EventHandler(this.OnFileModeActionToggled);
            this.PreviewAction.Toggled += new global::System.EventHandler(this.OnPreviewActionToggled);
            this.ServerInfoAction.Activated += new global::System.EventHandler(this.OnServerInfoActionActivated);
            this.PauseExecutionAction.Toggled += new global::System.EventHandler(this.OnPauseExecutionActionToggled);
            this.StopPANICAction.Activated += new global::System.EventHandler(this.OnStopPANICActionActivated);
            this.commandTreeView.RowActivated += new global::Gtk.RowActivatedHandler(this.OnCommandTreeViewRowActivated);
            this.commandEntry.Activated += new global::System.EventHandler(this.OnCommandEntryActivated);
            this.commandEntry.Changed += new global::System.EventHandler(this.OnCommandEntryChanged);
            this.sendcommandButton.Clicked += new global::System.EventHandler(this.OnSendcommandButtonClicked);
            this.panicButton.Clicked += new global::System.EventHandler(this.OnPanicButtonClicked);
            this.cancelFileButton.Clicked += new global::System.EventHandler(this.OnCancelFileButtonClicked);
            this.fileChooserButton.SelectionChanged += new global::System.EventHandler(this.OnFileChooserButtonSelectionChanged);
            this.fileSendButton.Clicked += new global::System.EventHandler(this.OnFileSendButtonClicked);
        }
    }
}
